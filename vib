#!/usr/bin/env python3
import sys
from urllib.parse import urljoin, urlencode
from html.parser import HTMLParser

class ViB(HTMLParser):
	bad = {'script': False, 'style': False, 'option': False}
	form = ['', '', {}]
	input_tags = ['input', 'textarea', 'select', 'button']

	def handle_starttag(self, tag, attrs):
		attrs = dict(attrs)
		if tag == 'a' and 'href' in attrs.keys():
			sys.stdout.write(f'\033{len(urls)}\035 ')
			urls.append(urljoin(urls[1], attrs['href'].strip()))
		elif tag == 'form' and 'action' in attrs.keys():
			ViB.form[0] = urljoin(urls[1], attrs["action"].strip())
			ViB.form[1] = attrs.get('method', 'get')
		elif tag in ViB.input_tags and 'name' in attrs.keys() and ViB.form[0]:
			ViB.form[2][attrs['name']] = attrs.get('value', '')
		elif tag in ViB.bad.keys():
			ViB.bad[tag] = True

	def handle_endtag(self, tag):
		if tag in ViB.bad.keys():
			ViB.bad[tag] = False
		elif tag == 'form' and ViB.form[0]:
			print(f'\033{len(urls)}\035', ViB.form[0], ViB.form[1])
			urls.append(f'{ViB.form[0]} {urlencode(ViB.form[2])}')
			ViB.form = ['', '', {}]

	def handle_data(self, data):
		if not (True in ViB.bad.values()) and not data.isspace():
			print(data)

parser = ViB()
sys.stdin.reconfigure(errors='ignore')
input = sys.stdin.readlines()
urls = ["", input[-1]]
parser.feed('\n'.join(input[:-1]))
for i in range(len(urls) - 1, 0, -1):
	print(urls[i])
